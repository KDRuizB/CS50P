(source):

class Jar:

    def __init__(self, capacity=12):
        self._capacity = capacity
        self._size = 0
        if self.capacity < 0:
            raise ValueError("Wrong capacity")

    def __str__(self):
        return self.size * '🍪'

    def deposit(self, n):
        if n > self.capacity:
            raise ValueError('Exceed capacity')
        if self.size + n > self.capacity:
            raise ValueError('Exceed capacity')
        self._size += n

    def withdraw(self, n):
        if self.size < n:
            raise ValueError("Not enough cookies in the jar!")
        self._size -= n

    @property
    def capacity(self):
        return self._capacity

    @property
    def size(self):
        return self._size

(pytest):

class Jar:

    def __init__(self, capacity=12):
        self._capacity = capacity
        self._size = 0
        if self.capacity < 0:
            raise ValueError("Wrong capacity")

    def __str__(self):
        return self.size * '🍪'

    def deposit(self, n):
        if n > self.capacity:
            raise ValueError('Exceed capacity')
        if self.size + n > self.capacity:
            raise ValueError('Exceed capacity')
        self._size += n

    def withdraw(self, n):
        if self.size < n:
            raise ValueError("Not enough cookies in the jar!")
        self._size -= n

    @property
    def capacity(self):
        return self._capacity

    @property
    def size(self):
        return self._size